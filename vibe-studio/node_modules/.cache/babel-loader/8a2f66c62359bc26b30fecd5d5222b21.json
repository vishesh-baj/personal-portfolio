{"ast":null,"code":"var _jsxFileName = \"/Users/vishesh/Documents/repositories/personal-portfolio/vibe-studio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { LocomotiveScrollProvider } from \"react-locomotive-scroll\";\nimport { ThemeProvider } from \"styled-components\";\nimport Home from \"./sections/Home\";\nimport { dark } from \"./styles/Themes\";\nimport \"locomotive-scroll/dist/locomotive-scroll.css\";\nimport GlobalStyles from \"./styles/GlobalSyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const containerRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: dark,\n      children: /*#__PURE__*/_jsxDEV(LocomotiveScrollProvider, {\n        options: {\n          smooth: true // ... all available Locomotive Scroll instance options\n\n        },\n        watch: [//..all the dependencies you want to watch to update the scroll.\n          //  Basicaly, you would want to watch page/location changes\n          //  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)\n        ],\n        containerRef: containerRef,\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          \"data-scroll-container\": true,\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"5okL0DAk6Atnb3+Rru+wGBWyP+4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vishesh/Documents/repositories/personal-portfolio/vibe-studio/src/App.js"],"names":["useRef","LocomotiveScrollProvider","ThemeProvider","Home","dark","GlobalStyles","App","containerRef","smooth"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,wBAAT,QAAyC,yBAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,8CAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,YAAY,GAAGP,MAAM,CAAC,IAAD,CAA3B;AACA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEI,IAAtB;AAAA,6BACE,QAAC,wBAAD;AACE,QAAA,OAAO,EAAE;AACPI,UAAAA,MAAM,EAAE,IADD,CAEP;;AAFO,SADX;AAKE,QAAA,KAAK,EACH,CACE;AACA;AACA;AAHF,SANJ;AAYE,QAAA,YAAY,EAAED,YAZhB;AAAA,+BAcE;AAAM,uCAAN;AAA4B,UAAA,GAAG,EAAEA,YAAjC;AAAA,iCAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA0BD,CA5BD;;GAAMD,G;;KAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import { useRef } from \"react\";\nimport { LocomotiveScrollProvider } from \"react-locomotive-scroll\";\nimport { ThemeProvider } from \"styled-components\";\nimport Home from \"./sections/Home\";\nimport { dark } from \"./styles/Themes\";\nimport \"locomotive-scroll/dist/locomotive-scroll.css\";\nimport GlobalStyles from \"./styles/GlobalSyles\";\nconst App = () => {\n  const containerRef = useRef(null);\n  return (\n    <>\n      <GlobalStyles />\n      <ThemeProvider theme={dark}>\n        <LocomotiveScrollProvider\n          options={{\n            smooth: true,\n            // ... all available Locomotive Scroll instance options\n          }}\n          watch={\n            [\n              //..all the dependencies you want to watch to update the scroll.\n              //  Basicaly, you would want to watch page/location changes\n              //  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)\n            ]\n          }\n          containerRef={containerRef}\n        >\n          <main data-scroll-container ref={containerRef}>\n            {/* ...your app */}\n            <Home />\n          </main>\n        </LocomotiveScrollProvider>\n      </ThemeProvider>\n    </>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}